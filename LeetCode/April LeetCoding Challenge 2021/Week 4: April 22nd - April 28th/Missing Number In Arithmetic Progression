In some array arr, the values were in arithmetic progression: the values arr[i + 1] - arr[i] are all equal for every 0 <= i < arr.length - 1.

A value from arr was removed that was not the first or last value in the array.

Given arr, return the removed value.

Example 1:

Input: arr = [5,7,11,13]
Output: 9
Explanation: The previous array was [5,7,9,11,13].
Example 2:

Input: arr = [15,13,12]
Output: 14
Explanation: The previous array was [15,14,13,12].
 

Constraints:

3 <= arr.length <= 1000
0 <= arr[i] <= 105
The given array is guaranteed to be a valid array.
----------------------------------------------------------------------------
class Solution {
    public int missingNumber(int[] arr) {
        //Sum of current array
        int sum = 0;
        for(int i : arr)
            sum+=i;
        
        //Actual AP Sum : (a+l)*n/2
        //As one element is missing, n will be n+1
        int n = arr.length;
        int actualSum = (arr[0] + arr[n-1])*(n+1)/2;
        return actualSum - sum;
    }
}
