You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.

Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.

Return true if a and b are alike. Otherwise, return false.

Example 1:

Input: s = "book"
Output: true
Explanation: a = "bo" and b = "ok". a has 1 vowel and b has 1 vowel. Therefore, they are alike.
Example 2:

Input: s = "textbook"
Output: false
Explanation: a = "text" and b = "book". a has 1 vowel whereas b has 2. Therefore, they are not alike.
Notice that the vowel o is counted twice.
Example 3:

Input: s = "MerryChristmas"
Output: false
Example 4:

Input: s = "AbCdEfGh"
Output: true

class Solution {
    public boolean halvesAreAlike(String s) {
            Set<Character> charSet = new HashSet<>();
    	charSet.add('a');
    	charSet.add('e');
    	charSet.add('i');
    	charSet.add('o');
    	charSet.add('u');
    	int count = 0;
    	for(int i=0 ; i<s.length()/2 ; i++) {
    		if(charSet.contains(s.toLowerCase().charAt(i))) count++;
    	}
    	for(int i=s.length()-1; i>=s.length()/2 ; i--) {
    		if(charSet.contains(s.toLowerCase().charAt(i))) count--;
    	}
    	if(count!=0)
    		return false;
    	return true;
    }
}
//1 Loop only
class Solution {
    public boolean halvesAreAlike(String s) {
        //add vowels to the set
		Set<Character> set = new HashSet<>();
        set.add('a');
        set.add('e');
        set.add('i');
        set.add('o');
        set.add('u');
        set.add('A');
        set.add('E');
        set.add('I');
        set.add('O');
        set.add('U');
        
		//find the mid
        int mid = s.length() / 2;
        int count = 0;
        //increment the count for left half, decrement count for the second half if its a vowel
		for (int i = 0; i < s.length(); i++)
            count += (set.contains(s.charAt(i))) ? ((i < mid) ? 1 : -1) : 0; 
        //finally count should be 0 to match left and right half
		return count == 0;
    }
}
